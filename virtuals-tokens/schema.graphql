type TokenLaunch @entity {
  id: ID!
  address: String! # The launched token address as string for search
  addressBytes: Bytes! # The raw token address bytes
  createdAtBlock: BigInt!
  createdAtTx: Bytes!
  tokenCreator: String! # Creator address as string for search
  tokenCreatorBytes: Bytes! # The raw creator address bytes
  timestamp: BigInt!
  
  # Launch function parameters
  name: String!
  ticker: String!
  cores: [Int!]!
  description: String!
  imageUrl: String!
  urls: [String!]!
  purchaseAmount: BigInt!
}

type TradeEvent @entity {
  id: ID!
  transactionHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  eventType: String! # "Transfer", "Approval", or "Swap"
  
  # Token information
  tokenAddress: String!
  tokenAddressBytes: Bytes!
  
  # Addresses involved
  fromAddress: String!
  fromAddressBytes: Bytes!
  toAddress: String
  toAddressBytes: Bytes
  
  # Amounts
  amountIn: BigInt
  amountOut: BigInt
  
  # Additional Swap-specific fields
  amount0In: BigInt
  amount0Out: BigInt
  amount1In: BigInt
  amount1Out: BigInt
}

type _Schema_
@fulltext(
  name: "tokenLaunchSearch"
  language: en
  algorithm: rank
  include: [
    {
      entity: "TokenLaunch",
      fields: [
        { name: "address" },
        { name: "tokenCreator" },
        { name: "name" },
        { name: "ticker" },
        { name: "description" }
      ]
    }
  ]
)
